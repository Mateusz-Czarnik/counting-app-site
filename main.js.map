{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/containers/app/app.component.scss","webpack:///./src/app/containers/app/app.component.ts","webpack:///./src/app/services/validators/validators.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './containers/app/app.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {ValidatorsService} from \"./services/validators/validators.service\";\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [\n    ValidatorsService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n}\n","module.exports = \":host {\\n  width: 100%; }\\n\\n.wrapper {\\n  max-width: 800px;\\n  width: 96%;\\n  margin: 0 auto; }\\n\\nh1 {\\n  background: #8022b0;\\n  text-align: center;\\n  color: white;\\n  margin: 0;\\n  padding: 10px; }\\n\\n.form {\\n  display: flex;\\n  flex-flow: row wrap;\\n  margin: 50px 0; }\\n\\n.form input {\\n    outline: 0;\\n    font-size: 16px;\\n    padding: 10px 40px 10px 15px;\\n    margin: 0;\\n    width: 100%;\\n    background: #fff;\\n    color: #545e6f;\\n    flex-grow: 1;\\n    border: 1px solid #d1deeb;\\n    border-radius: 3px;\\n    transition: all 0.2s ease-in-out; }\\n\\n.form .error {\\n    color: #a94442;\\n    background: #f2dede;\\n    border: 1px solid #e4b3b3;\\n    border-radius: 2px;\\n    padding: 8px;\\n    font-size: 14px;\\n    font-weight: 400;\\n    margin: 10px 0 0; }\\n\\n.form button {\\n    cursor: pointer;\\n    outline: 0;\\n    border: 0;\\n    border-radius: 2px;\\n    background: #39a1e7;\\n    color: #fff;\\n    padding: 10px 18px;\\n    font-size: 16px;\\n    font-weight: 600;\\n    transition: all 0.2s ease-in-out;\\n    display: block;\\n    margin: 20px auto; }\\n\\n.form .input-wrapper {\\n    width: 45%;\\n    min-height: 140px; }\\n\\n.form .input-wrapper:first-child {\\n      margin-right: auto; }\\n\\n.form .input-wrapper:last-child {\\n      margin-left: auto; }\\n\\n.form hr {\\n    width: 100%; }\\n\\nh3 {\\n  width: 100%;\\n  text-align: center; }\\n\"","import {Component} from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {ValidatorsService} from \"../../services/validators/validators.service\";\n\n@Component({\n  selector: 'app-root',\n  styleUrls: ['app.component.scss'],\n  template: `\n      <h1>Enter two whole numbers to calculate result</h1>\n      <div class=\"wrapper\">\n          <div [formGroup]=\"form\" class=\"form\">\n              <div class=\"input-wrapper\">\n                  <label class=\"\">\n                      <input\n                        class=\"\"\n                        type=\"text\"\n                        placeholder=\"First number\"\n                        formControlName=\"firstNumber\"\n                      >\n                  </label>\n                  <div class=\"error\" *ngIf=\"numberFormat('firstNumber')\">\n                      Must be numeric value\n                  </div>\n                  <div class=\"error\" *ngIf=\"required('firstNumber')\">\n                      Field is required\n                  </div>\n              </div>\n              <div class=\"input-wrapper\">\n                  <label class=\"\">\n                      <input\n                        class=\"\"\n                        type=\"text\"\n                        placeholder=\"Second number\"\n                        formControlName=\"secondNumber\"\n                      >\n                  </label>\n                  <div class=\"error\" *ngIf=\"numberFormat('secondNumber')\">\n                      Must be numeric value\n                  </div>\n                  <div class=\"error\" *ngIf=\"required('secondNumber')\">\n                      Field is required\n                  </div>\n              </div>\n              <hr>\n              <h3>Calculating formula: a + a * a - b + b * b</h3>\n              <h3>Result: {{ result }}</h3>\n              <button (click)=\"handleClick()\">Calculate</button>\n          </div>\n          <h3 *ngIf=\"list.length\">List of indexes:</h3>\n          <div *ngIf=\"result > 0 ; else message\">\n              <div *ngFor=\"let number of list\">\n                  {{number}}\n              </div>\n          </div>\n          <ng-template #message>\n              <h3 *ngIf=\"result < 0\">Cannot generate list of indexes</h3>\n          </ng-template>\n      </div>\n  `\n})\nexport class AppComponent {\n  result: number;\n  list: number[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private vs: ValidatorsService\n  ) {\n  }\n\n  form = this.fb.group({\n    firstNumber: ['', [Validators.required, this.vs.isInteger]],\n    secondNumber: ['', [Validators.required, this.vs.isInteger]],\n  });\n\n  handleClick() {\n    if (this.form.valid) {\n      let formVal = this.form.value;\n      this.result = this.calculateFormula(parseInt(formVal.firstNumber), parseInt(formVal.secondNumber));\n      this.generateList(this.result)\n    }\n  }\n\n  calculateFormula(a: number, b: number) {\n    return a + a * a - b + b * b;\n  }\n\n  generateList(elements: number) {\n    this.list = [];\n    for (let i = 0; i <= elements; i++) {\n      this.list.push(i)\n    }\n  }\n\n  numberFormat(controlName: string) {\n    const control = this.form.get(controlName);\n\n    return control.hasError('notNumeric') && control.touched\n  }\n\n  required(controlName: string) {\n    const control = this.form.get(controlName);\n\n    return control.hasError('required') && control.touched\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\nfunction isInteger(value: any) {\r\n  return (parseFloat(value) == parseInt(value)) && !isNaN(value)\r\n}\r\n\r\n@Injectable()\r\nexport class ValidatorsService {\r\n\r\n  public isInteger = (control: FormControl) => isInteger(control.value) ? null : {notNumeric: true}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}